library(psych)
library(GPArotation)
library(car)
library(dplyr)
setwd("~/GitHub/estructura-forestal-paisaje")
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
plantaciones_clase_ambas
View(plantaciones_clase_ambas)
cor_pl <- cor(plantaciones_clase_ambas[4:16])
cor_pl <- cor(plantaciones_clase_ambas[4:16], use = "pairwise.complete.obs")
eigen_pl <- eigen(cor_pl) # Esto encuentra los eigen usando PCA
scree(eigen_pl)
eigen_pl <- eigen(cor_pl) # Esto encuentra los eigen usando PCA
scree(eigen_pl)
cor_pl <- cor(plantaciones_clase_ambas[4:16], use = "pairwise.complete.obs")
eigen_pl <- eigen(cor_pl) # Esto encuentra los eigen usando PCA
scree(cor_pl)
scree(cor_pl, factors = FALSE)
EFA_model <- fa(plantaciones_clase_ambas[4:16],4)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model
EFA_model$loadings
head(EFA_model$scores)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model1 <- fa(plantaciones_clase_ambas[4:16],4)
EFA_model <- fa(plantaciones_clase_ambas[4:16],3)
EFA_model1 <- fa(plantaciones_clase_ambas[4:16],4)
efa_model$BIC
EFA_model$BIC
EFA_model1$BIC
EFA_model1$BIC
EFA_model1$BIC
EFA_model2$BIC
EFA_model1$BIC
EFA_model$BIC
library(dplyr)
setwd("~/GitHub/estructura-forestal-paisaje")
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
dim(X)
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
plantaciones_clase_ambas
plantaciones_clase_ambas
dim(X)
dim(plantaciones_clase_ambas)
nrow(plantaciones_clase_ambas)
ncol(plantaciones_clase_ambas)
ncol(plantaciones_clase_ambas) # 44 items
nrow(plantaciones_clase_ambas) # 44 observaciones
dim(plantaciones_clase_ambas) # 44
dim(plantaciones_clase_ambas) # 44
ncol(plantaciones_clase_ambas) # 44 items
nrow(plantaciones_clase_ambas) # 44 observaciones
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
dim(plantaciones_clase_ambas) # 44
ncol(plantaciones_clase_ambas) # 44 items
nrow(plantaciones_clase_ambas) # 44 observaciones
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
dim(plantaciones_clase_ambas) # 44
ncol(plantaciones_clase_ambas) # 44 items
nrow(plantaciones_clase_ambas) # 44 observaciones
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
dim(plantaciones_clase_ambas) # 44
ncol(plantaciones_clase_ambas) # 44 items
nrow(plantaciones_clase_ambas) # 44 observaciones
plantaciones_clase_ambas <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
dim(plantaciones_clase_ambas) # 44
ncol(plantaciones_clase_ambas) # 44 items
nrow(plantaciones_clase_ambas) # 44 observaciones
dim(X)
X <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
dim(X)
n.X <- nrow(X)
n.X
p.X <- ncol(X)
p.X
par(mfrow=c(2,4))
sapply(seq(1,8),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(1,8),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,8),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,12),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,20),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,25),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,44),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,10),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
par(mfrow=c(3,4))
sapply(seq(4,10),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,16),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
sapply(seq(4,16),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
sapply(seq(4,16),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,15),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
sapply(seq(4,15),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(4,15),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
sapply(seq(4,15),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
par(mfrow=c(3,4))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
sapply(seq(16,28),function(j)boxplot(X[,j],main=colnames(X)[j],xlab="",col="blue"))
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(ggplot2)
setwd("~/GitHub/estructura-forestal-paisaje")
pl <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
head(pl)
head(pl)
head(pl)
ggplot(pl[4:8], aes(x = pl[4:8])) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 1) +
labs(title = "Metricas por comuna")
pl[3:8]
head(pl[3:8])
View((pl[3:8]))
View((pl[2:8]))
View((pl[1:8]))
select(pl, - TYPE)
View(select(pl, - TYPE))
pl_small <- (select(pl, - TYPE))
ggplot(pl_small, aes(x = pl_small) +
ggplot(pl_small, aes(x = pl_small) +
ggplot(pl_small, aes(x = pl_small) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 1) +
labs(title = "Metricas por comuna"))
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 1) +
labs(title = "Metricas por comuna")
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 1) +
labs(title = "Metricas por comuna")
pl_small
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 44) +
labs(title = "Metricas por comuna")
ncol(pl_small)
pl_small <- (select(pl[1:8], - TYPE))
ncol(pl_small)
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 7 ) +
labs(title = "Metricas por comuna")
View(pl_small)
pl_small <- (select(pl[1:8, 1:5], - TYPE))
nrow(pl_small)
ncol(pl_small)
ncol()
ncol(pl_small)
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 4 ) +
labs(title = "Metricas por comuna")
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 8 ) +
labs(title = "Metricas por comuna")
pl_small
str(pl_small)
pls_small
pl_small
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 4 ) +
labs(title = "Metricas por comuna")
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID, ncol = 1 ) +
labs(title = "Metricas por comuna")
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID) +
labs(title = "Metricas por comuna")
setwd("~/GitHub/estructura-forestal-paisaje")
pl <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
pl_small <- (select(pl[1:8, 1:5], - TYPE))
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID) +
labs(title = "Metricas por comuna")
ggplot(pl_small, aes(x = pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID) +
labs(title = "Metricas por comuna")
ggplot(pl_small, aes(pl_small)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID) +
labs(title = "Metricas por comuna")
ggplot(pl_small, aes(LID)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
facet_wrap(~LID) +
labs(title = "Metricas por comuna")
pl_small
head(pl_small)
ggplot(pl_small, aes(CA)) +
geom_histogram(fill = "cornflowerblue",
color = "white")
ggplot(pl_small, aes(CA)) +
geom_histogram(fill = "cornflowerblue",
color = "white")
ggplot(pl_small, aes(LPI)) +
geom_histogram(fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(LPI)) +
geom_histogram(fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(LPI)) +
geom_histogram(binwidth = 10, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(LPI)) +
geom_histogram(binwidth = 9, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(LPI)) +
geom_histogram(binwidth = 7, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(LPI)) +
geom_histogram(binwidth = 5, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(LPI)) +
geom_histogram(binwidth = 20, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(LPI)) +
geom_histogram(binwidth = 1, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(binwidth = 1, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(binwidth = 10, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(binwidth = 20, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(binwidth = 20, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(binwidth = 20, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(bin = 6, fill = "cornflowerblue",
color = "white")
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(binwith = 10, fill = "cornflowerblue",
color = "white")
### Definir un histograma
ggplot(pl, aes(GYRATE_MN)) +
geom_histogram(binwith = 10, fill = "cornflowerblue",
color = "white") + theme_bw()
### Definir un histograma
p = ggplot(pl, aes(GYRATE_MN))
p + gem_density()
### Definir un histograma
p = ggplot(pl, aes(GYRATE_MN))
p + gem_density()
### Definir un histograma
p = ggplot(pl, aes(GYRATE_MN))
p + geom_density()
p + geom_density(color = "cornflowerblue" )
p + geom_freqpoly(bins = 6, fill = "cornflowerblue" )
p + geom_freqpoly(bins = 6, color = "cornflowerblue" )
p + geom_density(color = "cornflowerblue" )
p + geom_freqpoly(bins = 6, color = "cornflowerblue" )
p + geom_freqpoly(bins = 10, color = "cornflowerblue" )
p + geom_freqpoly(bins = 100, color = "cornflowerblue" )
p + geom_freqpoly(bins = 5, color = "cornflowerblue" )
p + geom_density(color = "cornflowerblue", fill = "red", alpha = 0.5 )
p + geom_density(color = "black", fill = "red", alpha = 0.5 )
ggplot(data = pl, aes(x= GYRATE_MN, y = GYRATE_MD)) + geom_point()
ggplot(data = pl, aes(x= GYRATE_MN, y = GYRATE_MD)) + geom_point() + geom_smooth()
ggplot(data = pl, aes(x= GYRATE_MN, y = GYRATE_MD)) + geom_point() + geom_smooth(se = F)
boxplot(data = cut())
ggplot(data = diamons, aes(x = cut(carat, breaks = 10), y = price)) + geom_boxplot()
ggplot(data = diamons, aes(x = cut(carat, breaks = 10), y = price)) + geom_boxplot()
ggplot(data = diamons, aes(x = cut(carat, breaks = 10), y = price)) + geom_boxplot()
pl[1,]
pl[1,7]
pl[1,7]
pl[pl$PLAND<0.7]
pl_07 <- pl[pl$PLAND <0.7,]
ggplot(data = pl_07, aes(x = price)) + geom_histogram()
ggplot(data = pl_07, aes(x = price)) + geom_histogram()
ggplot(data = pl_07, aes(x = PLAND)) + geom_histogram()
ggplot(data = pl_07, aes(x = PLADJ)) + geom_histogram()
ggplot(data = pl_07, aes(x = PLADJ)) + geom_histogram(bins = 1)
ggplot(data = pl_07, aes(x = PLADJ)) + geom_histogram(bins = 10)
ggplot(data = pl_07, aes(x = PLADJ)) + geom_histogram(bins = 100)
head(pl_07)
pl_07 <- pl[pl$PLAND < 0.3,]
ggplot(data = pl_07, aes(x = PLADJ)) + geom_histogram(bins = 100)
pl_03 <- pl[pl$PLAND < 0.3,]
ggplot(data = pl_03, aes(x = PLADJ)) + geom_histogram(bins = 10)
head(pl_0.3)
head(pl_03)
pl_03 <- pl[pl$ENN_MN< 0.3,]
pl_03
pl_03 <- pl[pl$ENN_MN< 0.8,]
pl_03
pl_03 <- pl[pl$ENN_MN > 0.8,]
pl_03
ggplot(data = pl_03, aes(x = PLADJ)) + geom_histogram(bins = 10)
ggplot(data = pl, aes(x = PLADJ)) + geom_histogram(bins = 10)
ggplot(data = pl, aes(x = PLADJ)) + geom_histogram(bins = 15)
ggplot(data = pl, aes(x = PLADJ)) + geom_histogram(bins = 20)
ggplot(data = pl, aes(x = PLADJ)) + geom_histogram(bins = 25)
ggplot(data = pl, aes(x = PLADJ)) + geom_histogram(bins = 25)
ggplot(pl_small, aes(x = CA, y = LPI)) + geom_points()
ggplot(pl_small, aes(x = CA, y = LPI)) + geom_points()
ggplot(pl_small, aes(x = CA, y = LPI)) + geom_point()
ggplot(pl_small, aes(x = CA, y = LPI, color = LDI)) + geom_point()
ggplot(pl_small, aes(x = CA, y = LPI, color = LID)) + geom_point()
ggplot(pl, aes(x = CA, y = LPI, color = LID)) + geom_point()
ggplot(pl_small, aes(x = CA, y = LPI, color = LID)) + geom_point()
ggplot(pl_small, aes(x = CA, y = LPI, color = LID)) + geom_point() +
geom_smooth(se = T)
ggplot(pl_small, aes(x = CA, y = LPI, color = LID)) + geom_point() +
geom_smooth(se = T)
ggplot(pl_small, aes(x = CA, y = PLAND, color = LID)) + geom_point() +
geom_smooth(se = T)
ggplot(pl_small, aes(x = CA, y = PLAND, color = LID)) + geom_point() +
geom_smooth + coord_cartesian(ylim = 0, 70) # Tengo solo un punto por categoria y opor eso no
ggplot(pl_small, aes(x = CA, y = PLAND, color = LID)) + geom_point() +
coord_cartesian(ylim = 0, 70) # Tengo solo un punto por categoria y opor eso no
ggplot(data = pl_small, aes(x = LID, y = PLAND)) + geom_boxplot()
pl$TYPE
ggplot(data = pl, aes(x = TYPE, y = PLAND)) + geom_boxplot() # Hay solo un valor por categoria
ggplot(pl, aes(x = CA, y = PLAND, color = LID, shape = TYPE)) + geom_point() +
coord_cartesian(ylim = 0, 70) # Tengo solo un punto por categoria y opor eso no
ggplot(data = pl_small, aes(x = CA, y = PLAND, color = LID, shape = TYPE)) + geom_point() # Hay solo un valor por categoria
pl_small <- (select(pl[1:7]))
ggplot(data = pl_small, aes(x = CA, y = PLAND, color = LID, shape = TYPE)) + geom_point() # Hay solo un valor por categoria
pl_small <- (select(pl[1:7,]))
pl_small
pl <- read.table(file = "prim_sel_metricas_completas_42_16_05_2019.csv", header = TRUE, sep =";", dec = "." )
pl_small <- pl[1:7,])
pl_small <- pl[1:7,]
pl_small
pl_small$TYPE
ggplot(data = pl_small, aes(x = CA, y = PLAND, color = LID, shape = TYPE)) + geom_point() # Hay solo un valor por categoria
pl_small$
ggplot(data = pl_small, aes(x = GYRATE_MN, y = GYRATE_MD)) + geom_point
pl_small$
a <- ggplot(data = pl_small, aes(x = GYRATE_MN, y = GYRATE_MD)) + geom_point()
pl_small$
a <- ggplot(data = pl_small, aes(x = GYRATE_MN, y = GYRATE_MD)) + geom_point()
pl_small$
ggplot(data = pl_small, aes(x = GYRATE_MN, y = GYRATE_MD)) + geom_point()
ggplot(pl, aes(x = CA, y = PLAND, color = LID, shape = TYPE)) + geom_point() +
coord_cartesian(ylim = 0, 70) # Tengo solo un punto por categoria y opor eso no
pl_small$
ggplot(data = pl_small, aes(x = CA, y = PLAND)) + geom_point()
pl_small$
ggplot(data = pl_small, aes(x = CA, y = PLAND)) + geom_point()
pl_small
pl_small$
ggplot(data = pl_small, aes(x = CA, y = PLAND)) + geom_point()
pl_small$
ggplot(data = pl_small, aes(x = CA, y = PLAND)) + geom_point()
class(pl_small)
pl_small$
ggplot(data = pl_small, aes(x = CA, y = PLAND))
pl_small$
ggplot(data = pl, aes(x = CA, y = PLAND))
pl_small$
ggplot(data = pl_small, aes(x = CA, y = PLAND))
ggplot(pl, aes(x = CA, y = PLAND, color = LID, shape = TYPE)) + geom_point() +
coord_cartesian(ylim = 0, 70) # Tengo solo un punto por categoria y opor eso no
pl
pl
pl
View(pl)
ggplot(data = pl, aes(x = PLADJ)) + geom_histogram(bins = 25)
a <- ggplot(data = pl, aes(x = PLADJ)) + geom_histogram(bins = 25)
a + facet_grid(LID)
pl_small$
pl
pl
pl$LID
a + facet_grid(LID)
a + facet_grid(LID,)
a + facet_grid("LID",)
a <- ggplot(data = pl_small, aes(x = PLADJ)) + geom_histogram(bins = 25)
a + facet_grid("LID",)
a + facet_grid(,"LID")
a + facet_grid("LID",)
p + geom_density(color = "black", fill = "red", alpha = 0.5 )
b <- p + geom_density(color = "black", fill = "red", alpha = 0.5 )
b + facet_grid("LID",)
### Definir un histograma
p = ggplot(pl_small, aes(GYRATE_MN))
b <- p + geom_density(color = "black", fill = "red", alpha = 0.5 )
b + facet_grid("LID",)
b + facet_grid(,"LID")
b + facet_grid(,"LID")
b + facet_grid("LID")
### Definir un histograma
p = ggplot(pl_small, aes(GYRATE_MN))
b <- p + geom_density(color = "black", fill = "red", alpha = 0.5 )
b
+ facet_grid("LID~GYRATE_MN")
b + facet_grid("LID~GYRATE_MN")
ggplot(data = pl, aes(x= GYRATE_MN, y = GYRATE_MD)) + geom_point() + geom_smooth(se = F)
ggplot(data = pl, aes(x= GYRATE_MN, y = GYRATE_MD)) + geom_point()
c <- ggplot(data = pl, aes(x= GYRATE_MN, y = GYRATE_MD)) + geom_point()
c + facet_grid(.~LID)
c <- ggplot(data = pl_small, aes(x= GYRATE_MN, y = GYRATE_MD)) + geom_point()
c + facet_grid(.~LID)
c + facet_grid(.~LID)
c + facet_grid(.~LID)
c + facet_grid(.~LID)
