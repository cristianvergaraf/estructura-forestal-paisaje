setwd("C:/Users/crist/Documents/GitHub/estructura-forestal-paisaje/shiny/exploratorio")
shiny::runApp()
library(dplyr)
library(tidyr)
library(tidyverse)
library(hrbrthemes)
library(viridis)
setwd("C:/Users/crist/Documents/GitHub/estructura-forestal-paisaje/shiny/exploratorio")
pl_norm_long <- pivot_longer(pl_norm, c(-LID,-X), names_to = "Metricas" )
ggplot(pl_norm_long, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
filter(pl_norm_long, Metricas == "PLAND.z")
pl_norm_long$Metricas
pl_norm_long <- pivot_longer(pl_norm, c(-LID,-X), names_to = "Metricas" )
setwd("C:/Users/crist/Documents/GitHub/estructura-forestal-paisaje/shiny/exploratorio")
pl_norm_long <- pivot_longer(pl_norm, c(-LID,-X), names_to = "Metricas" )
pl_norm_long <- read.csv(pl_norm_long)
pl_norm_long <- read.csv(pl_norm_long.csv)
pl_norm_long <- read.csv("pl_norm_long.csv")
pl_norm_long <- read.csv("pl_norm_long.csv")
ggplot(pl_norm_long, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
ggplot(pl_norm_long, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
filter(pl_norm_long, Metricas == "PLAND.z")
pl_norm_long$Metricas
ggplot(pl_norm, aes(y = AI.z, fill = AI.z)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6)
pl_norm <- read.csv("pl_norm.csv")
pl_norm_long <- read.csv("pl_norm_long.csv")
ggplot(pl_norm_long, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
ggplot(pl_norm_long, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
filter(pl_norm_long, Metricas == "PLAND.z")
pl_norm_long$Metricas
ggplot(pl_norm, aes(y = AI.z, fill = AI.z)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6)
test <- filter(pl_norm_long, Metricas == "ENN_MN.z")
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
library(dplyr)
library(tidyr)
library(tidyverse)
library(hrbrthemes)
library(viridis)
setwd("C:/Users/crist/Documents/GitHub/estructura-forestal-paisaje/shiny/exploratorio")
pl_norm_long <- pivot_longer(pl_norm, c(-LID,-X), names_to = "Metricas" )
write.csv(pl_norm_long, file = "pl_norm_long.csv")
pl_norm <- read.csv("pl_norm.csv")
pl_norm_long <- read.csv("pl_norm_long.csv")
ggplot(pl_norm_long, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9)
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum()
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() + theme(
legend.position="none",
plot.title = element_text(size=11))
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() + theme(
legend.position="none",
plot.title = element_text(size=15))
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() + theme(
legend.position="none",
plot.title = element_text(size=15))+
ggtitle("Basic boxplot") +
xlab("")
ggplot(test, aes(x = Metricas, y = value, fill = Metricas)) +
geom_boxplot() + geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() + theme(
legend.position="none")+
xlab("")
?tabPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# plot
test %>%
ggplot( aes(x=Metricas)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=Metricas)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
test$Metricas
test$value
View(test)
# plot
test %>%
ggplot( aes(x=values)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=value)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 3") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=value)) +
geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=value)) +
geom_histogram( binwidth=30, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=value)) +
geom_histogram( binwidth= 2, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=value)) +
geom_histogram( binwidth= 1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=value)) +
geom_histogram( binwidth= 0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
test %>%
ggplot( aes(x=value)) +
geom_histogram( binwidth= 0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
runApp()
pl_norm
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram( binwidth= 0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram( binwidth= 0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram( binwidth= 1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
theme(
plot.title = element_text(size=15)
)
warning()
warnings()
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram( binwidth= 1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum() +
)
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram( binwidth= 1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum()
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram(binwidth= 0.1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum()
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram(binwidth= 0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 10") +
theme_ipsum()
# plot
pl_norm %>%
ggplot( aes(x=DIVISION.z)) +
geom_histogram(binwidth= 0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum()
# plot
pl_norm %>%
ggplot(aes(x=DIVISION.z)) +
geom_histogram(binwidth= 0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
theme_ipsum()
# plot
pl_norm %>%
ggplot(aes(x=DIVISION.z)) +
geom_histogram(binwidth= 0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
test$value
# plot
pl_norm %>%
ggplot(aes(x=DIVISION.z)) +
geom_histogram(binwidth= 0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9)
runApp()
x <- pl_norm[, "DIVISION.z"]
x <- pl_norm[,"DIVISION.z"]
x
class(x)
runApp()
runApp()
runApp()
pl_norm
pl_norm$PLAND.z
class(pl_norm$PLAND.z)
runApp()
